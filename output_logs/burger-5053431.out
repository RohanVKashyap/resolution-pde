Job started on babel-0-31 at Tue Jun 10 20:46:59 EDT 2025
Job ID: 5053431
GPU information:
Tue Jun 10 20:46:59 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 575.51.03              Driver Version: 575.51.03      CUDA Version: 12.9     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA RTX A6000               On  |   00000000:A1:00.0 Off |                  Off |
| 30%   39C    P8             39W /  300W |       1MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA RTX A6000               On  |   00000000:C1:00.0 Off |                  Off |
| 30%   41C    P8             28W /  300W |       1MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
CUDA devices:
CUDA_VISIBLE_DEVICES: 0,1
Using device: cuda
[2025-06-10 20:47:04,481][root][INFO] - model:
  image_size: 64
  patch_size: 4
  num_channels: 3
  num_out_channels: 3
  embed_dim: 96
  depths:
  - 8
  - 8
  - 8
  - 8
  num_heads:
  - 3
  - 6
  - 12
  - 24
  skip_connections:
  - 2
  - 2
  - 2
  - 0
  window_size: 16
  mlp_ratio: 4.0
  qkv_bias: true
  hidden_dropout_prob: 0.0
  attention_probs_dropout_prob: 0.0
  drop_path_rate: 0.0
  hidden_act: gelu
  use_absolute_embeddings: false
  initializer_range: 0.02
  layer_norm_eps: 1.0e-05
  p: 1
  channel_slice_list_normalized_loss:
  - 0
  - 1
  - 2
  - 3
  residual_model: convnext
  use_conditioning: true
  learn_residual: false
dataset:
  reduced_batch: 1
  reduced_resolution: 1
  reduced_resolution_t: 1
  window_size: 15
  original_res: 512
  multi_res:
  - 1
  - 16
  train_mres: true
  pde: navier_stokes_0
  data_path1: data/pdebench/ns_incom_inhom_2d_512-0.hdf5
training:
  batch_size: 16
  epochs: 100
  learning_rate: 0.0001
  use_normalizer: false
project_name: ${dataset.pde}_${hydra:runtime.choices.model}
checkpoint_dir: checkpoints

Project name: navier_stokes_0_pos/pos
PDE Dataset: navier_stokes_0
Loading from file: /home/rvk/data/pdebench/ns_incom_inhom_2d_512-0.hdf5
Available keys: ['force', 'particles', 't', 'velocity']
Velocity data shape: (4, 1000, 512, 512, 2)
Particles data shape: (4, 1000, 512, 512, 1)
Combined data shape: (4, 1000, 512, 512, 3)
x shape: torch.Size([3992, 3, 512, 512])
y shape: torch.Size([3992, 3, 512, 512])
---------Using data normalizer---------------
Train dataset size: 3193
Validation dataset size: 399
Test dataset size: 400
<class 'torch.Tensor'> -0.017814628779888153 -0.01815485768020153 0.8440588712692261 0.847968339920044
Sample Input shape: torch.Size([16, 3, 512, 512])
Sample Output shape: torch.Size([16, 3, 512, 512])
ScOT(
  (embeddings): ScOTEmbeddings(
    (patch_embeddings): ScOTPatchEmbeddings(
      (projection): Conv2d(3, 96, kernel_size=(4, 4), stride=(4, 4))
    )
    (norm): ConditionalLayerNorm(
      (weight): Linear(in_features=1, out_features=96, bias=True)
      (bias): Linear(in_features=1, out_features=96, bias=True)
    )
    (dropout): Dropout(p=0.0, inplace=False)
  )
  (encoder): ScOTEncoder(
    (layers): ModuleList(
      (0): ScOTEncodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=3, bias=False)
                )
                (query): Linear(in_features=96, out_features=96, bias=True)
                (key): Linear(in_features=96, out_features=96, bias=False)
                (value): Linear(in_features=96, out_features=96, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=96, out_features=96, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=96, bias=True)
              (bias): Linear(in_features=1, out_features=96, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=96, out_features=384, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=384, out_features=96, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=96, bias=True)
              (bias): Linear(in_features=1, out_features=96, bias=True)
            )
          )
        )
        (downsample): ScOTPatchMerging(
          (reduction): Linear(in_features=384, out_features=192, bias=False)
          (norm): ConditionalLayerNorm(
            (weight): Linear(in_features=1, out_features=192, bias=True)
            (bias): Linear(in_features=1, out_features=192, bias=True)
          )
        )
      )
      (1): ScOTEncodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=6, bias=False)
                )
                (query): Linear(in_features=192, out_features=192, bias=True)
                (key): Linear(in_features=192, out_features=192, bias=False)
                (value): Linear(in_features=192, out_features=192, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=192, out_features=192, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=192, bias=True)
              (bias): Linear(in_features=1, out_features=192, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=192, out_features=768, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=768, out_features=192, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=192, bias=True)
              (bias): Linear(in_features=1, out_features=192, bias=True)
            )
          )
        )
        (downsample): ScOTPatchMerging(
          (reduction): Linear(in_features=768, out_features=384, bias=False)
          (norm): ConditionalLayerNorm(
            (weight): Linear(in_features=1, out_features=384, bias=True)
            (bias): Linear(in_features=1, out_features=384, bias=True)
          )
        )
      )
      (2): ScOTEncodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=12, bias=False)
                )
                (query): Linear(in_features=384, out_features=384, bias=True)
                (key): Linear(in_features=384, out_features=384, bias=False)
                (value): Linear(in_features=384, out_features=384, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=384, out_features=384, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=384, bias=True)
              (bias): Linear(in_features=1, out_features=384, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=384, out_features=1536, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=1536, out_features=384, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=384, bias=True)
              (bias): Linear(in_features=1, out_features=384, bias=True)
            )
          )
        )
        (downsample): ScOTPatchMerging(
          (reduction): Linear(in_features=1536, out_features=768, bias=False)
          (norm): ConditionalLayerNorm(
            (weight): Linear(in_features=1, out_features=768, bias=True)
            (bias): Linear(in_features=1, out_features=768, bias=True)
          )
        )
      )
      (3): ScOTEncodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=24, bias=False)
                )
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=False)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=768, bias=True)
              (bias): Linear(in_features=1, out_features=768, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=768, bias=True)
              (bias): Linear(in_features=1, out_features=768, bias=True)
            )
          )
        )
      )
    )
  )
  (decoder): ScOTDecoder(
    (layers): ModuleList(
      (0): ScOTDecodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=24, bias=False)
                )
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=False)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=768, bias=True)
              (bias): Linear(in_features=1, out_features=768, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=768, bias=True)
              (bias): Linear(in_features=1, out_features=768, bias=True)
            )
          )
        )
        (upsample): ScOTPatchUnmerging(
          (upsample): Linear(in_features=768, out_features=1536, bias=False)
          (mixup): Linear(in_features=384, out_features=384, bias=False)
          (norm): ConditionalLayerNorm(
            (weight): Linear(in_features=1, out_features=384, bias=True)
            (bias): Linear(in_features=1, out_features=384, bias=True)
          )
        )
      )
      (1): ScOTDecodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=12, bias=False)
                )
                (query): Linear(in_features=384, out_features=384, bias=True)
                (key): Linear(in_features=384, out_features=384, bias=False)
                (value): Linear(in_features=384, out_features=384, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=384, out_features=384, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=384, bias=True)
              (bias): Linear(in_features=1, out_features=384, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=384, out_features=1536, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=1536, out_features=384, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=384, bias=True)
              (bias): Linear(in_features=1, out_features=384, bias=True)
            )
          )
        )
        (upsample): ScOTPatchUnmerging(
          (upsample): Linear(in_features=384, out_features=768, bias=False)
          (mixup): Linear(in_features=192, out_features=192, bias=False)
          (norm): ConditionalLayerNorm(
            (weight): Linear(in_features=1, out_features=192, bias=True)
            (bias): Linear(in_features=1, out_features=192, bias=True)
          )
        )
      )
      (2): ScOTDecodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=6, bias=False)
                )
                (query): Linear(in_features=192, out_features=192, bias=True)
                (key): Linear(in_features=192, out_features=192, bias=False)
                (value): Linear(in_features=192, out_features=192, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=192, out_features=192, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=192, bias=True)
              (bias): Linear(in_features=1, out_features=192, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=192, out_features=768, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=768, out_features=192, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=192, bias=True)
              (bias): Linear(in_features=1, out_features=192, bias=True)
            )
          )
        )
        (upsample): ScOTPatchUnmerging(
          (upsample): Linear(in_features=192, out_features=384, bias=False)
          (mixup): Linear(in_features=96, out_features=96, bias=False)
          (norm): ConditionalLayerNorm(
            (weight): Linear(in_features=1, out_features=96, bias=True)
            (bias): Linear(in_features=1, out_features=96, bias=True)
          )
        )
      )
      (3): ScOTDecodeStage(
        (blocks): ModuleList(
          (0-7): 8 x ScOTLayer(
            (attention): Swinv2Attention(
              (self): Swinv2SelfAttention(
                (continuous_position_bias_mlp): Sequential(
                  (0): Linear(in_features=2, out_features=512, bias=True)
                  (1): ReLU(inplace=True)
                  (2): Linear(in_features=512, out_features=3, bias=False)
                )
                (query): Linear(in_features=96, out_features=96, bias=True)
                (key): Linear(in_features=96, out_features=96, bias=False)
                (value): Linear(in_features=96, out_features=96, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): Swinv2SelfOutput(
                (dense): Linear(in_features=96, out_features=96, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (layernorm_before): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=96, bias=True)
              (bias): Linear(in_features=1, out_features=96, bias=True)
            )
            (drop_path): Identity()
            (intermediate): Swinv2Intermediate(
              (dense): Linear(in_features=96, out_features=384, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): Swinv2Output(
              (dense): Linear(in_features=384, out_features=96, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_after): ConditionalLayerNorm(
              (weight): Linear(in_features=1, out_features=96, bias=True)
              (bias): Linear(in_features=1, out_features=96, bias=True)
            )
          )
        )
      )
    )
  )
  (patch_recovery): ScOTPatchRecovery(
    (projection): ConvTranspose2d(96, 3, kernel_size=(4, 4), stride=(4, 4))
    (mixup): Conv2d(3, 3, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)
  )
  (residual_blocks): ModuleList(
    (0): ModuleList(
      (0-1): 2 x ConvNeXtBlock(
        (dwconv): Conv2d(96, 96, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=96)
        (norm): ConditionalLayerNorm(
          (weight): Linear(in_features=1, out_features=96, bias=True)
          (bias): Linear(in_features=1, out_features=96, bias=True)
        )
        (pwconv1): Linear(in_features=96, out_features=384, bias=True)
        (act): GELU(approximate='none')
        (pwconv2): Linear(in_features=384, out_features=96, bias=True)
        (drop_path): Identity()
      )
    )
    (1): ModuleList(
      (0-1): 2 x ConvNeXtBlock(
        (dwconv): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
        (norm): ConditionalLayerNorm(
          (weight): Linear(in_features=1, out_features=192, bias=True)
          (bias): Linear(in_features=1, out_features=192, bias=True)
        )
        (pwconv1): Linear(in_features=192, out_features=768, bias=True)
        (act): GELU(approximate='none')
        (pwconv2): Linear(in_features=768, out_features=192, bias=True)
        (drop_path): Identity()
      )
    )
    (2): ModuleList(
      (0-1): 2 x ConvNeXtBlock(
        (dwconv): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
        (norm): ConditionalLayerNorm(
          (weight): Linear(in_features=1, out_features=384, bias=True)
          (bias): Linear(in_features=1, out_features=384, bias=True)
        )
        (pwconv1): Linear(in_features=384, out_features=1536, bias=True)
        (act): GELU(approximate='none')
        (pwconv2): Linear(in_features=1536, out_features=384, bias=True)
        (drop_path): Identity()
      )
    )
    (3): ModuleList(
      (0): Identity()
    )
  )
)
Epoch 0, Train Loss: 0.69679865, Val Loss: 0.37943847
Epoch 10, Train Loss: 0.10957114, Val Loss: 0.10743239
Epoch 20, Train Loss: 0.09614255, Val Loss: 0.09648474
Epoch 30, Train Loss: 0.09212831, Val Loss: 0.09483340
Epoch 40, Train Loss: 0.08978234, Val Loss: 0.09362372
Epoch 50, Train Loss: 0.08859507, Val Loss: 0.08901395
Epoch 60, Train Loss: 0.08778472, Val Loss: 0.08926826
Epoch 70, Train Loss: 0.08728558, Val Loss: 0.08796246
Epoch 80, Train Loss: 0.08701419, Val Loss: 0.08772527
Epoch 90, Train Loss: 0.08693488, Val Loss: 0.08759893
Job completed at Tue Jun 10 22:40:43 EDT 2025
