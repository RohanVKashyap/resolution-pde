Job started on babel-11-9 at Mon Sep 15 20:14:51 EDT 2025
Job ID: 5463114
GPU information:
Mon Sep 15 20:14:51 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 575.51.03              Driver Version: 575.51.03      CUDA Version: 12.9     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA RTX A6000               On  |   00000000:1B:00.0 Off |                  Off |
| 30%   39C    P8             39W /  300W |       1MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA RTX A6000               On  |   00000000:1C:00.0 Off |                  Off |
| 30%   37C    P8             25W /  300W |       1MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
CUDA devices:
CUDA_VISIBLE_DEVICES: 0,1
/home/rvk
Using device: cuda
Available GPUs: 2
[2025-09-15 20:14:57,493][root][INFO] - model:
  _target_: models.ffno.FFNO2D
  in_channels: 1
  out_channels: 1
  factor: 4
  n_modes: 64
  width: 64
  n_layers: 4
  dropout: 0.1
  mode: full
  ff_weight_norm: true
  n_ff_layers: 3
  layer_norm: true
  use_grid: true
dataset:
  dataset_params:
    _target_: dataloaders.ns_naive_true_multires.ns_true_multires_markov_dataset
    saved_folder: /data/user_data/rvk/ns_data
    file_extension: .h5
    viscosity: '0.001'
    reduced_batch: 1
    reduced_resolution_t: 1
    data_mres_size:
      256: 400
      128: 0
      64: 600
    add_res:
    - 32
    add_res_samples:
      32: 0
    downsample_from_res: 64
    data_normalizer: true
    normalization_type: simple
    num_samples_max: -1
    eval_dataset_target: dataloaders.ns_naive_markov.ns_markov_dataset
    eval_filename: ns_256_0.001.h5
    eval_saved_folder: /data/user_data/rvk/ns_data
  resize_to_train: false
  evaluation_type: naive_downsample
  window_size: 15
  original_res: 256
  max_test_resolution: 256
  train_mres: true
  pde: ns
training:
  batch_size: 16
  epochs: 100
  learning_rate: 0.001
  use_normalizer: false
project_name: ${dataset.pde}_${hydra:runtime.choices.model}
checkpoint_dir: checkpoints

Project name: ns_ffno_2d/ffno_2d
Model name: models.ffno.FFNO2D
PDE Dataset: ns
This is True Multi-Resolution Training. Train Resolution is the highest data resolution in the multi-resolution data
---------------------
Creating true multi-resolution Navier-Stokes dataset from /data/user_data/rvk/ns_data
Viscosity: 0.001, File extension: .h5
Target samples per resolution: {256: 400, 128: 0, 64: 600}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 0}
Will downsample from resolution: 64
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {256: 400, 128: 0, 64: 600}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 0}
Will downsample from resolution: 64
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 32, 256, 256, 1)
  Split 'train' data shape: (800, 32, 256, 256, 1)
  Subsampled to 320 samples for train split
  Added 9600 sample pairs from resolution 256
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 32, 64, 64, 1)
  Split 'train' data shape: (800, 32, 64, 64, 1)
  Subsampled to 480 samples for train split
  Added 14400 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  No downsampled samples allocated for train split at resolution 32
Total samples loaded: 24000
Resolution distribution:
  256_file: 9600 samples
  64_file: 14400 samples
Sample x shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Sample y shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {256: 400, 128: 0, 64: 600}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 0}
Will downsample from resolution: 64
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 32, 256, 256, 1)
  Split 'val' data shape: (100, 32, 256, 256, 1)
  Using all 100 samples for val split
  Added 3000 sample pairs from resolution 256
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 32, 64, 64, 1)
  Split 'val' data shape: (100, 32, 64, 64, 1)
  Using all 100 samples for val split
  Added 3000 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  No downsampled samples allocated for val split at resolution 32
Total samples loaded: 6000
Resolution distribution:
  256_file: 3000 samples
  64_file: 3000 samples
Sample x shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Sample y shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {256: 400, 128: 0, 64: 600}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 0}
Will downsample from resolution: 64
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 32, 256, 256, 1)
  Split 'test' data shape: (100, 32, 256, 256, 1)
  Using all 100 samples for test split
  Added 3000 sample pairs from resolution 256
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 32, 64, 64, 1)
  Split 'test' data shape: (100, 32, 64, 64, 1)
  Using all 100 samples for test split
  Added 3000 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  No downsampled samples allocated for test split at resolution 32
Total samples loaded: 6000
Resolution distribution:
  256_file: 3000 samples
  64_file: 3000 samples
Sample x shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Sample y shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
---------Using simple global normalization---------------
Global statistics: X(mean=-0.000000, std=0.622881), Y(mean=-0.000000, std=0.641627)

Final dataset sizes:
Train dataset size: 24000
Validation dataset size: 6000
Test dataset size: 6000
<dataloaders.ns_naive_true_multires.ns_true_multires_markov_dataset.<locals>.SimpleNormalizedDataset object at 0x153208d60b90>
Detected 2 GPUs. Adjusting batch size from 16 to 32
Created resolution groups:
  Resolution 256: 9600 samples
  Resolution 64: 14400 samples
Created resolution groups:
  Resolution 256: 3000 samples
  Resolution 64: 3000 samples
Created resolution groups:
  Resolution 256: 3000 samples
  Resolution 64: 3000 samples
<class 'torch.Tensor'> -6.122675699771207e-10 -5.967422112007625e-10 1.0710033178329468 1.0681043863296509
FFNO2D(
  (in_proj): WNLinear(in_features=3, out_features=64, bias=True)
  (fourier_layers): ModuleList(
    (0-3): 4 x FSpectralConv2d(
      (fourier_weight): ParameterList(
          (0): Parameter containing: [torch.float32 of size 64x64x64x2 (cuda:0)]
          (1): Parameter containing: [torch.float32 of size 64x64x64x2 (cuda:0)]
      )
      (backcast_ff): FeedForward(
        (layers): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=64, out_features=256, bias=True)
            (1): Dropout(p=0.1, inplace=False)
            (2): GELU(approximate='none')
            (3): Identity()
          )
          (1): Sequential(
            (0): Linear(in_features=256, out_features=256, bias=True)
            (1): Dropout(p=0.1, inplace=False)
            (2): GELU(approximate='none')
            (3): Identity()
          )
          (2): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): Dropout(p=0.1, inplace=False)
            (2): Identity()
            (3): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
    )
  )
  (out_proj): WNLinear(in_features=64, out_features=1, bias=True)
)
Using DataParallel with 2 GPUs
Total Model Parameters: 4.59M
Trainable Parameters: 4.59M
Epoch 0, Train Loss: 0.11255455, Val Loss: 0.02476014
Epoch 10, Train Loss: 0.00609658, Val Loss: 0.00722701
Epoch 20, Train Loss: 0.00396718, Val Loss: 0.00673284
Epoch 30, Train Loss: 0.00214829, Val Loss: 0.00698748
Epoch 40, Train Loss: 0.00211570, Val Loss: 0.00700395
Epoch 50, Train Loss: 0.00206081, Val Loss: 0.00661376
Epoch 60, Train Loss: 0.00153461, Val Loss: 0.00552669
Epoch 70, Train Loss: 0.00156608, Val Loss: 0.00533903
Epoch 80, Train Loss: 0.00147863, Val Loss: 0.00554134
Epoch 90, Train Loss: 0.00124417, Val Loss: 0.00548908
Test L2 Loss: 0.005414
Model saved to checkpoints/ffno2d/ns_5463114.pt
Created/verified figures directory: figures/5463114
Evaluating 2D NS model at multiple resolutions
Using normalizer from training resolution 256
Testing resolutions: [32, 64, 128, 256]
Loading from file: /data/user_data/rvk/ns_data/ns_256_0.001.h5
Loading .h5 file...
Available keys: ['a', 't', 'u']
H5 data shape before any processing: (1000, 256, 256, 32)
Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
Raw data shape: (1000, 32, 256, 256)
Converted to shape: (1000, 32, 256, 256, 1)
After reduction: (1000, 32, 32, 32, 1)
Markov pairs - x: (1000, 30, 32, 32, 1), y: (1000, 30, 32, 32, 1)
Final x shape: torch.Size([30000, 1, 32, 32])
Final y shape: torch.Size([30000, 1, 32, 32])
Dataset splits - Train: 24000, Val: 3000, Test: 3000

Final dataset sizes:
Train dataset size: 24000
Validation dataset size: 3000
Test dataset size: 3000
Selected random indices for plotting: [2685, 1777, 618, 1793, 1574, 506, 2674, 956, 1892, 2883]
Collected 10 examples for resolution 32
Resolution 32 (downsample factor: 8) - Relative L2 Loss: 0.016676
Memory cleaned after resolution 32


Loading from file: /data/user_data/rvk/ns_data/ns_256_0.001.h5
Loading .h5 file...
Available keys: ['a', 't', 'u']
H5 data shape before any processing: (1000, 256, 256, 32)
Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
Raw data shape: (1000, 32, 256, 256)
Converted to shape: (1000, 32, 256, 256, 1)
After reduction: (1000, 32, 64, 64, 1)
Markov pairs - x: (1000, 30, 64, 64, 1), y: (1000, 30, 64, 64, 1)
Final x shape: torch.Size([30000, 1, 64, 64])
Final y shape: torch.Size([30000, 1, 64, 64])
Dataset splits - Train: 24000, Val: 3000, Test: 3000

Final dataset sizes:
Train dataset size: 24000
Validation dataset size: 3000
Test dataset size: 3000
Collected 10 examples for resolution 64
Resolution 64 (downsample factor: 4) - Relative L2 Loss: 0.005540
Memory cleaned after resolution 64


Loading from file: /data/user_data/rvk/ns_data/ns_256_0.001.h5
Loading .h5 file...
Available keys: ['a', 't', 'u']
H5 data shape before any processing: (1000, 256, 256, 32)
Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
Raw data shape: (1000, 32, 256, 256)
Converted to shape: (1000, 32, 256, 256, 1)
After reduction: (1000, 32, 128, 128, 1)
Markov pairs - x: (1000, 30, 128, 128, 1), y: (1000, 30, 128, 128, 1)
Final x shape: torch.Size([30000, 1, 128, 128])
Final y shape: torch.Size([30000, 1, 128, 128])
Dataset splits - Train: 24000, Val: 3000, Test: 3000

Final dataset sizes:
Train dataset size: 24000
Validation dataset size: 3000
Test dataset size: 3000
Collected 10 examples for resolution 128
Resolution 128 (downsample factor: 2) - Relative L2 Loss: 0.005841
Memory cleaned after resolution 128


Loading from file: /data/user_data/rvk/ns_data/ns_256_0.001.h5
Loading .h5 file...
Available keys: ['a', 't', 'u']
H5 data shape before any processing: (1000, 256, 256, 32)
Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
Raw data shape: (1000, 32, 256, 256)
Converted to shape: (1000, 32, 256, 256, 1)
After reduction: (1000, 32, 256, 256, 1)
Markov pairs - x: (1000, 30, 256, 256, 1), y: (1000, 30, 256, 256, 1)
Final x shape: torch.Size([30000, 1, 256, 256])
Final y shape: torch.Size([30000, 1, 256, 256])
Dataset splits - Train: 24000, Val: 3000, Test: 3000

Final dataset sizes:
Train dataset size: 24000
Validation dataset size: 3000
Test dataset size: 3000
Collected 10 examples for resolution 256
Resolution 256 (downsample factor: 1) - Relative L2 Loss: 0.005294
Memory cleaned after resolution 256


Creating 2D prediction vs target plots...
Saved main 2D comparison plot: figures/5463114/prediction_plots/ns_2d_main_comparison.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_1_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_2_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_3_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_4_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_5_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_6_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_7_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_8_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_9_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_32_example_10_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_1_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_2_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_3_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_4_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_5_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_6_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_7_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_8_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_9_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_64_example_10_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_1_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_2_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_3_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_4_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_5_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_6_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_7_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_8_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_9_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_128_example_10_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_1_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_2_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_3_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_4_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_5_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_6_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_7_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_8_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_9_20250916_031320.png
Saved individual 2D plot: figures/5463114/prediction_plots/ns_2d_res_256_example_10_20250916_031320.png
Created individual plots for 10 examples at each resolution
Saved numerical results: figures/5463114/ns_1d_evaluation_results_20250916_031400.csv
Saved summary: figures/5463114/ns_1d_evaluation_summary_20250916_031400.txt

==================================================
2D NS EVALUATION SUMMARY
==================================================
Resolution  32x 32: 0.016676
Resolution  64x 64: 0.005540
Resolution 128x128: 0.005841
Resolution 256x256: 0.005294

Summary of Super-Resolution Evaluation:
Resolution factor 32: Relative L2 Loss = 0.016676
Resolution factor 64: Relative L2 Loss = 0.005540
Resolution factor 128: Relative L2 Loss = 0.005841
Resolution factor 256: Relative L2 Loss = 0.005294

Evaluation plots saved to: figures/5463114
Wandb run: https://wandb.ai/rohanvk-carnegie-mellon-university/ffno2d/runs/d8xr4gpq
Job completed at Tue Sep 16 03:14:06 EDT 2025
