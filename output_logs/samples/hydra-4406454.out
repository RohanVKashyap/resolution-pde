Job started on babel-8-9 at Wed Mar 19 13:34:52 EDT 2025
Job ID: 4406454
Using device: cuda:0
Target features are normalized using pointwise unit normalizer
Input features are normalized using unit transformer
Target features are normalized using pointwise unit normalizer
Input features are normalized using unit transformer
Graph g: 25600 nodes, 0 edges
Node features shape: torch.Size([25600, 1])
Node targets shape: torch.Size([25600, 1])
Parameters u_p shape: torch.Size([25, 1])
Using trunk_size=2, branch_size=1, output_size=1
Trunk size: 2, Branch size: 1
Using Linear Attention
Using Linear Attention
Using Linear Attention

Model: MoEGPT	 Number of params: 737095
Saving model and result in ./data/checkpoints/burgers_all_MoEGPTNO_burgers_simple_0319_13_34_56.pt

Using cycle learning rate schedule
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.163e+00| val metric 0: 1.163629 | best val: 1.163629 at epoch 1 | current lr: 1.000e-03
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.163e+00| val metric 0: 2.288667 | best val: 1.163629 at epoch 1 | current lr: 9.619e-04
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 2.320e+00| val metric 0: 1.023341 | best val: 1.023341 at epoch 3 | current lr: 8.536e-04
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.007e+00| val metric 0: 1.494647 | best val: 1.023341 at epoch 3 | current lr: 6.913e-04
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
epoch: [5/10] | loss 0: 1.493219 | loss 1: 0.000000 | current lr: 5.000e-04
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.493e+00| val metric 0: 1.156248 | best val: 1.023341 at epoch 3 | current lr: 5.000e-04
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.142e+00| val metric 0: 1.069740 | best val: 1.023341 at epoch 3 | current lr: 3.087e-04
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.063e+00| val metric 0: 1.074826 | best val: 1.023341 at epoch 3 | current lr: 1.464e-04
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.068e+00| val metric 0: 1.047932 | best val: 1.023341 at epoch 3 | current lr: 3.806e-05
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.038e+00| val metric 0: 1.038076 | best val: 1.023341 at epoch 3 | current lr: 1.000e-11
g nodes: 25600, g_u nodes: 25600
u_p shape: torch.Size([25, 1])
Original x shape: torch.Size([25, 1024, 1])
u_p shape after expansion: torch.Size([25, 1024, 1])
x shape after concatenation: torch.Size([25, 1024, 2])
Final x shape before MLP: torch.Size([25, 1024, 2])
Expected trunk size: 2
epoch: [10/10] | loss 0: 1.026090 | loss 1: 0.000000 | current lr: 3.806e-05
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
| loss 0: 1.026e+00| val metric 0: 1.038076 | best val: 1.023341 at epoch 3 | current lr: 3.806e-05
Training takes 2.199985980987549 seconds.
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2

Final model's validation metric: {'metric': np.float32(1.0380762)}
Loaded best model for inference
Original x shape: torch.Size([7, 1024, 1])
u_p shape after expansion: torch.Size([7, 1024, 1])
x shape after concatenation: torch.Size([7, 1024, 2])
Final x shape before MLP: torch.Size([7, 1024, 2])
Expected trunk size: 2
Job completed at Wed Mar 19 13:35:01 EDT 2025
