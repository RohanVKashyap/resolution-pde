Job started on babel-11-21 at Mon Sep 29 18:43:19 EDT 2025
Job ID: 5596768
GPU information:
Mon Sep 29 18:43:19 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 575.51.03              Driver Version: 575.51.03      CUDA Version: 12.9     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA RTX A6000               On  |   00000000:1E:00.0 Off |                  Off |
| 30%   35C    P8             27W /  300W |       1MiB /  49140MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
CUDA devices:
CUDA_VISIBLE_DEVICES: 0
Using device: cuda
[2025-09-29 18:43:38,398][root][INFO] - model:
  _target_: models.unet.UNet1d
  in_channels: 1
  out_channels: 1
  width: 64
dataset:
  dataset_params:
    _target_: dataloaders.burger_naive_true_multires.burger_true_multires_markov_dataset
    filename_pattern: 1D_Burgers_Sols_Nu*.hdf5
    saved_folder: /data/user_data/rvk/pdebench_gen/
    viscosity: 0.001
    reduced_batch: 1
    reduced_resolution_t: 1
    data_mres_size:
      1024: 400
      512: 0
      256: 0
      128: 0
    add_res:
    - 32
    - 64
    add_res_samples:
      64: 0
      32: 1600
    downsample_from_res: 128
    data_normalizer: true
    normalization_type: simple
    num_samples_max: -1
    eval_dataset_target: dataloaders.burger_naive_markov.burger_markov_dataset
    eval_filename: 1D_Burgers_Sols_Nu0.001.hdf5
    eval_saved_folder: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/
  resize_to_train: false
  evaluation_type: naive_downsample
  window_size: 15
  original_res: 1024
  max_test_resolution: 1024
  train_mres: true
  pde: burger
training:
  batch_size: 16
  epochs: 100
  learning_rate: 0.001
  use_normalizer: false
project_name: ${dataset.pde}_${hydra:runtime.choices.model}
checkpoint_dir: checkpoints

Project name: burger_unet/unet_1d
Model name: models.unet.UNet1d
PDE Dataset: burger
This is True Multi-Resolution Training. Train Resolution is the highest data resolution in the multi-resolution data
---------------------
Creating true multi-resolution dataset from /data/user_data/rvk/pdebench_gen/
Viscosity: 0.001
Target samples per resolution (from files): {1024: 400, 512: 0, 256: 0, 128: 0}
Additional downsampled resolutions: [32, 64]
Target samples per downsampled resolution: {64: 0, 32: 1600}
Will downsample from resolution: 128
Loading multi-resolution data from /data/user_data/rvk/pdebench_gen/
Viscosity: 0.001
Target samples per resolution (from files): {1024: 400, 512: 0, 256: 0, 128: 0}
Additional downsampled resolutions: [32, 64]
Target samples per downsampled resolution: {64: 0, 32: 1600}
Will downsample from resolution: 128
Loading resolution 1024 from /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
  Original data shape for 1024: (10000, 201, 1024)
  After time reduction: (10000, 201, 1024)
  Split 'train' data shape: (8000, 201, 1024)
  Subsampled to 320 samples for train split
  Added 63680 sample pairs from resolution 1024
Adding downsampled resolutions: [32, 64]
Adding downsampled data from /data/user_data/rvk/pdebench_gen/burgers_128_0.001/1D_Burgers_Sols_Nu0.001.hdf5
  Added 254720 downsampled samples at resolution 32
  No downsampled samples allocated for train split at resolution 64
Total samples loaded: 318400
Resolution distribution:
  1024_file: 63680 samples
  32_downsampled: 254720 samples
Sample x shapes: [(1, 1024), (1, 1024), (1, 1024)]
Sample y shapes: [(1, 1024), (1, 1024), (1, 1024)]
Loading multi-resolution data from /data/user_data/rvk/pdebench_gen/
Viscosity: 0.001
Target samples per resolution (from files): {1024: 400, 512: 0, 256: 0, 128: 0}
Additional downsampled resolutions: [32, 64]
Target samples per downsampled resolution: {64: 0, 32: 1600}
Will downsample from resolution: 128
Loading resolution 1024 from /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
  Original data shape for 1024: (10000, 201, 1024)
  After time reduction: (10000, 201, 1024)
  Split 'val' data shape: (1000, 201, 1024)
  Subsampled to 40 samples for val split
  Added 7960 sample pairs from resolution 1024
Adding downsampled resolutions: [32, 64]
Adding downsampled data from /data/user_data/rvk/pdebench_gen/burgers_128_0.001/1D_Burgers_Sols_Nu0.001.hdf5
  Added 31840 downsampled samples at resolution 32
  No downsampled samples allocated for val split at resolution 64
Total samples loaded: 39800
Resolution distribution:
  1024_file: 7960 samples
  32_downsampled: 31840 samples
Sample x shapes: [(1, 1024), (1, 1024), (1, 1024)]
Sample y shapes: [(1, 1024), (1, 1024), (1, 1024)]
Loading multi-resolution data from /data/user_data/rvk/pdebench_gen/
Viscosity: 0.001
Target samples per resolution (from files): {1024: 400, 512: 0, 256: 0, 128: 0}
Additional downsampled resolutions: [32, 64]
Target samples per downsampled resolution: {64: 0, 32: 1600}
Will downsample from resolution: 128
Loading resolution 1024 from /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
  Original data shape for 1024: (10000, 201, 1024)
  After time reduction: (10000, 201, 1024)
  Split 'test' data shape: (1000, 201, 1024)
  Subsampled to 40 samples for test split
  Added 7960 sample pairs from resolution 1024
Adding downsampled resolutions: [32, 64]
Adding downsampled data from /data/user_data/rvk/pdebench_gen/burgers_128_0.001/1D_Burgers_Sols_Nu0.001.hdf5
  Added 31840 downsampled samples at resolution 32
  No downsampled samples allocated for test split at resolution 64
Total samples loaded: 39800
Resolution distribution:
  1024_file: 7960 samples
  32_downsampled: 31840 samples
Sample x shapes: [(1, 1024), (1, 1024), (1, 1024)]
Sample y shapes: [(1, 1024), (1, 1024), (1, 1024)]

==================================================
CREATING ROLLOUT TEST DATASET
==================================================
Extracting Burgers test trajectories for rollout evaluation
Viscosity: 0.001
Loading trajectories from resolution 1024: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
  Original data shape: (10000, 201, 1024)
  After time reduction: (10000, 201, 1024)
  Test split data shape: (1000, 201, 1024)
  Subsampled to 40 test trajectories
  Extracted 40 complete trajectories from resolution 1024

Total extracted trajectories: 40
Trajectory shapes: [torch.Size([201, 1024]), torch.Size([201, 1024]), torch.Size([201, 1024])]
Resolution distribution:
  Resolution 1024: 40 trajectories
Rollout test dataset created with 40 trajectories
---------Using simple global normalization---------------
Global statistics: X(mean=-0.004857, std=0.619350), Y(mean=-0.004857, std=0.618266)

Final dataset sizes:
Train dataset size: 318400
Validation dataset size: 39800
Test dataset size: 39800
Rollout test dataset size: 40
<dataloaders.burger_naive_true_multires.burger_true_multires_markov_dataset.<locals>.SimpleNormalizedDataset object at 0x147447b46fd0>
Created resolution groups:
  Resolution 1024: 63680 samples
  Resolution 32: 254720 samples
Created resolution groups:
  Resolution 1024: 7960 samples
  Resolution 32: 31840 samples
Created resolution groups:
  Resolution 1024: 7960 samples
  Resolution 32: 31840 samples
<class 'torch.Tensor'> -0.2742147147655487 -0.27495238184928894 0.891551673412323 0.8906119465827942
UNet1d(
  (encoder1): Sequential(
    (enc1conv1): Conv1d(1, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc1norm1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc1tanh1): Tanh()
    (enc1conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc1norm2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc1tanh2): Tanh()
  )
  (pool1): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (encoder2): Sequential(
    (enc2conv1): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc2norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc2tanh1): Tanh()
    (enc2conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc2norm2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc2tanh2): Tanh()
  )
  (pool2): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (encoder3): Sequential(
    (enc3conv1): Conv1d(128, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc3norm1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc3tanh1): Tanh()
    (enc3conv2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc3norm2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc3tanh2): Tanh()
  )
  (pool3): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (encoder4): Sequential(
    (enc4conv1): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc4norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc4tanh1): Tanh()
    (enc4conv2): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (enc4norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (enc4tanh2): Tanh()
  )
  (pool4): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  (bottleneck): Sequential(
    (bottleneckconv1): Conv1d(512, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (bottlenecknorm1): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bottlenecktanh1): Tanh()
    (bottleneckconv2): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (bottlenecknorm2): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (bottlenecktanh2): Tanh()
  )
  (upconv4): ConvTranspose1d(1024, 512, kernel_size=(2,), stride=(2,))
  (decoder4): Sequential(
    (dec4conv1): Conv1d(1024, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec4norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec4tanh1): Tanh()
    (dec4conv2): Conv1d(512, 512, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec4norm2): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec4tanh2): Tanh()
  )
  (upconv3): ConvTranspose1d(512, 256, kernel_size=(2,), stride=(2,))
  (decoder3): Sequential(
    (dec3conv1): Conv1d(512, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec3norm1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec3tanh1): Tanh()
    (dec3conv2): Conv1d(256, 256, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec3norm2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec3tanh2): Tanh()
  )
  (upconv2): ConvTranspose1d(256, 128, kernel_size=(2,), stride=(2,))
  (decoder2): Sequential(
    (dec2conv1): Conv1d(256, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec2norm1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec2tanh1): Tanh()
    (dec2conv2): Conv1d(128, 128, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec2norm2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec2tanh2): Tanh()
  )
  (upconv1): ConvTranspose1d(128, 64, kernel_size=(2,), stride=(2,))
  (decoder1): Sequential(
    (dec1conv1): Conv1d(128, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec1norm1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec1tanh1): Tanh()
    (dec1conv2): Conv1d(64, 64, kernel_size=(3,), stride=(1,), padding=(1,), bias=False)
    (dec1norm2): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (dec1tanh2): Tanh()
  )
  (conv): Conv1d(64, 1, kernel_size=(1,), stride=(1,))
)
Total Model Parameters: 10.82M
Trainable Parameters: 10.82M
Epoch 0, Train Loss: 0.34506691, Val Loss: 0.08624179
Epoch 10, Train Loss: 0.19458867, Val Loss: 0.10630017
Epoch 20, Train Loss: 0.17354328, Val Loss: 0.17763276
Epoch 30, Train Loss: 0.15401137, Val Loss: 0.09186489
Epoch 40, Train Loss: 0.14249210, Val Loss: 0.18140353
Epoch 50, Train Loss: 0.14403134, Val Loss: 0.07552843
Epoch 60, Train Loss: 0.13733234, Val Loss: 0.06208439
Epoch 70, Train Loss: 0.13447027, Val Loss: 0.04703430
Epoch 80, Train Loss: 0.13009768, Val Loss: 0.05406285
Epoch 90, Train Loss: 0.12674896, Val Loss: 0.09164062
Test L2 Loss: 0.071473
Model saved to checkpoints/unet1d/burger_5596768.pt
Created/verified figures directory: figures/5596768
Evaluating BURGER model at multiple resolutions
Using normalizer from training resolution 1024
Testing resolutions: [32, 64, 128, 256, 512, 1024]
Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
(10000, 201, 1024)
After downsampling data shape: (10000, 201, 32)
Total data shape: (10000, 201, 32)
x shape: (1990000, 1, 32)
y shape: (1990000, 1, 32)
grid shape: torch.Size([32, 1])

==================================================
CREATING ROLLOUT TEST DATASET
==================================================
Extracting Burgers test trajectories for rollout evaluation
File: 1D_Burgers_Sols_Nu0.001.hdf5
Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
Original data shape: (10000, 201, 1024)
After downsampling data shape: (10000, 201, 32)
Total data shape after sampling: (10000, 201, 32)
Test split data shape: (1000, 201, 32)
Extracted 1000 complete trajectories
Trajectory shapes: [torch.Size([201, 32]), torch.Size([201, 32]), torch.Size([201, 32])]
Rollout test dataset created with 1000 trajectories

Final dataset sizes:
Train dataset size: 1592000
Validation dataset size: 199000
Test dataset size: 199000
Rollout test dataset size: 1000
Selected random indices for plotting: [81438, 144932, 82418, 21066, 46678, 2823, 154561, 183337, 125961, 87029]
Collected 10 examples for resolution 32
Resolution 32 (downsample factor: 32) - Relative L2 Loss: 0.082355
Memory cleaned after resolution 32


Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
(10000, 201, 1024)
After downsampling data shape: (10000, 201, 64)
Total data shape: (10000, 201, 64)
x shape: (1990000, 1, 64)
y shape: (1990000, 1, 64)
grid shape: torch.Size([64, 1])

==================================================
CREATING ROLLOUT TEST DATASET
==================================================
Extracting Burgers test trajectories for rollout evaluation
File: 1D_Burgers_Sols_Nu0.001.hdf5
Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
Original data shape: (10000, 201, 1024)
After downsampling data shape: (10000, 201, 64)
Total data shape after sampling: (10000, 201, 64)
Test split data shape: (1000, 201, 64)
Extracted 1000 complete trajectories
Trajectory shapes: [torch.Size([201, 64]), torch.Size([201, 64]), torch.Size([201, 64])]
Rollout test dataset created with 1000 trajectories

Final dataset sizes:
Train dataset size: 1592000
Validation dataset size: 199000
Test dataset size: 199000
Rollout test dataset size: 1000
Collected 10 examples for resolution 64
Resolution 64 (downsample factor: 16) - Relative L2 Loss: 0.078918
Memory cleaned after resolution 64


Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
(10000, 201, 1024)
After downsampling data shape: (10000, 201, 128)
Total data shape: (10000, 201, 128)
x shape: (1990000, 1, 128)
y shape: (1990000, 1, 128)
grid shape: torch.Size([128, 1])

==================================================
CREATING ROLLOUT TEST DATASET
==================================================
Extracting Burgers test trajectories for rollout evaluation
File: 1D_Burgers_Sols_Nu0.001.hdf5
Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
Original data shape: (10000, 201, 1024)
After downsampling data shape: (10000, 201, 128)
Total data shape after sampling: (10000, 201, 128)
Test split data shape: (1000, 201, 128)
Extracted 1000 complete trajectories
Trajectory shapes: [torch.Size([201, 128]), torch.Size([201, 128]), torch.Size([201, 128])]
Rollout test dataset created with 1000 trajectories

Final dataset sizes:
Train dataset size: 1592000
Validation dataset size: 199000
Test dataset size: 199000
Rollout test dataset size: 1000
Collected 10 examples for resolution 128
Resolution 128 (downsample factor: 8) - Relative L2 Loss: 0.083189
Memory cleaned after resolution 128


Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
(10000, 201, 1024)
After downsampling data shape: (10000, 201, 256)
Total data shape: (10000, 201, 256)
x shape: (1990000, 1, 256)
y shape: (1990000, 1, 256)
grid shape: torch.Size([256, 1])

==================================================
CREATING ROLLOUT TEST DATASET
==================================================
Extracting Burgers test trajectories for rollout evaluation
File: 1D_Burgers_Sols_Nu0.001.hdf5
Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
Original data shape: (10000, 201, 1024)
After downsampling data shape: (10000, 201, 256)
Total data shape after sampling: (10000, 201, 256)
Test split data shape: (1000, 201, 256)
Extracted 1000 complete trajectories
Trajectory shapes: [torch.Size([201, 256]), torch.Size([201, 256]), torch.Size([201, 256])]
Rollout test dataset created with 1000 trajectories

Final dataset sizes:
Train dataset size: 1592000
Validation dataset size: 199000
Test dataset size: 199000
Rollout test dataset size: 1000
Collected 10 examples for resolution 256
Resolution 256 (downsample factor: 4) - Relative L2 Loss: 0.088352
Memory cleaned after resolution 256


Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
(10000, 201, 1024)
After downsampling data shape: (10000, 201, 512)
Total data shape: (10000, 201, 512)
x shape: (1990000, 1, 512)
y shape: (1990000, 1, 512)
grid shape: torch.Size([512, 1])

==================================================
CREATING ROLLOUT TEST DATASET
==================================================
Extracting Burgers test trajectories for rollout evaluation
File: 1D_Burgers_Sols_Nu0.001.hdf5
Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
Original data shape: (10000, 201, 1024)
After downsampling data shape: (10000, 201, 512)
Total data shape after sampling: (10000, 201, 512)
Test split data shape: (1000, 201, 512)
Extracted 1000 complete trajectories
Trajectory shapes: [torch.Size([201, 512]), torch.Size([201, 512]), torch.Size([201, 512])]
Rollout test dataset created with 1000 trajectories

Final dataset sizes:
Train dataset size: 1592000
Validation dataset size: 199000
Test dataset size: 199000
Rollout test dataset size: 1000
Collected 10 examples for resolution 512
Resolution 512 (downsample factor: 2) - Relative L2 Loss: 0.091256
Memory cleaned after resolution 512


Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
(10000, 201, 1024)
After downsampling data shape: (10000, 201, 1024)
Total data shape: (10000, 201, 1024)
x shape: (1990000, 1, 1024)
y shape: (1990000, 1, 1024)
grid shape: torch.Size([1024, 1])

==================================================
CREATING ROLLOUT TEST DATASET
==================================================
Extracting Burgers test trajectories for rollout evaluation
File: 1D_Burgers_Sols_Nu0.001.hdf5
Loading from file: /data/user_data/rvk/pdebench_gen/burgers_1024_0.001/1D_Burgers_Sols_Nu0.001.hdf5
Original data shape: (10000, 201, 1024)
After downsampling data shape: (10000, 201, 1024)
Total data shape after sampling: (10000, 201, 1024)
Test split data shape: (1000, 201, 1024)
Extracted 1000 complete trajectories
Trajectory shapes: [torch.Size([201, 1024]), torch.Size([201, 1024]), torch.Size([201, 1024])]
Rollout test dataset created with 1000 trajectories

Final dataset sizes:
Train dataset size: 1592000
Validation dataset size: 199000
Test dataset size: 199000
Rollout test dataset size: 1000
Collected 10 examples for resolution 1024
Resolution 1024 (downsample factor: 1) - Relative L2 Loss: 0.092911
Memory cleaned after resolution 1024


Creating prediction vs target plots...
Saved prediction plot: figures/5596768/prediction_plots/burger_predictions_vs_targets_10_examples.png
Saved numerical results: figures/5596768/burger_1d_evaluation_results_20250930_000437.csv
Saved summary: figures/5596768/burger_1d_evaluation_summary_20250930_000437.txt

==================================================
BURGER EVALUATION SUMMARY
==================================================
Resolution  32: 0.082355
Resolution  64: 0.078918
Resolution 128: 0.083189
Resolution 256: 0.088352
Resolution 512: 0.091256
Resolution 1024: 0.092911
[1;34mwandb[0m: 
[1;34mwandb[0m: 🚀 View run [33mdifferent-gorge-116[0m at: [34mhttps://wandb.ai/rohanvk-carnegie-mellon-university/unet1d/runs/4my4btu8[0m
[1;34mwandb[0m: Find logs at: [1;35mwandb/run-20250929_184719-4my4btu8/logs[0m
Job completed at Tue Sep 30 00:04:53 EDT 2025
