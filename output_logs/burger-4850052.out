Job started on babel-9-11 at Mon May 12 13:30:45 EDT 2025
Job ID: 4850052
GPU information:
Mon May 12 13:30:45 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA L40                     On  |   00000000:A1:00.0 Off |                    0 |
| N/A   29C    P8             34W /  300W |       1MiB /  46068MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA L40                     On  |   00000000:C1:00.0 Off |                    0 |
| N/A   29C    P8             36W /  300W |       1MiB /  46068MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
CUDA devices:
CUDA_VISIBLE_DEVICES: 0,1
Using device: cuda
[2025-05-12 13:30:48,705][root][INFO] - model:
  _target_: models.s4_2d.S4NDModel
  d_input: 15
  d_output: 3
  d_model: 64
  n_layers: 1
  dropout: 0.2
  prenorm: false
dataset:
  reduced_batch: 1
  reduced_resolution: 4
  reduced_resolution_t: 4
  window_size: 15
  original_res: 512
  pde: navier_stokes_0
  data_path1: data/pdebench/ns_incom_inhom_2d_512-0.hdf5
training:
  batch_size: 16
  epochs: 100
  learning_rate: 0.001
  use_normalizer: false
project_name: ${dataset.pde}_${hydra:runtime.choices.model}
checkpoint_dir: checkpoints

Project name: navier_stokes_0_s4_2d/s4_2d
Model name: models.s4_2d.S4NDModel
PDE Dataset: navier_stokes_0
Loading from file: /home/rvk/data/pdebench/ns_incom_inhom_2d_512-0.hdf5
Available keys: ['force', 'particles', 't', 'velocity']
Velocity data shape: (4, 1000, 512, 512, 2)
Particles data shape: (4, 1000, 512, 512, 1)
Time data shape: (4, 250)
Combined data shape: (4, 250, 128, 128, 3)
x shape: torch.Size([940, 45, 128, 128])
y shape: torch.Size([940, 3, 128, 128])
---------Using data normalizer---------------
Train dataset size: 752
Validation dataset size: 94
Test dataset size: 94
<class 'torch.Tensor'> 0.007445479277521372 0.004540420603007078 0.864220142364502 0.8785939812660217
Sample Input shape: torch.Size([16, 45, 128, 128])
Sample Output shape: torch.Size([16, 3, 128, 128])
[2025-05-12 13:31:15,680][models.s4][WARNING] - CUDA extension for structured kernels (Cauchy and Vandermonde multiplication) not found. Install by going to extensions/kernels/ and running `python setup.py install`, for improved speed and memory efficiency. Note that the kernel changed for state-spaces 4.0 and must be recompiled.
[2025-05-12 13:31:15,681][models.s4][WARNING] - Falling back on slow Cauchy and Vandermonde kernel. Install at least one of pykeops or the CUDA extension for better speed and memory efficiency.
[2025-05-12 13:31:15,685][models.s4nd][WARNING] - CUDA extension for structured kernels (Cauchy and Vandermonde multiplication) not found. Install by going to extensions/kernels/ and running `python setup.py install`, for improved speed and memory efficiency. Note that the kernel changed for state-spaces 4.0 and must be recompiled.
[2025-05-12 13:31:15,686][models.s4nd][WARNING] - Falling back on slow Cauchy and Vandermonde kernel. Install at least one of pykeops or the CUDA extension for better speed and memory efficiency.
S4NDModel(
  (encoder): Linear(in_features=47, out_features=64, bias=True)
  (s4_layers): ModuleList(
    (0): S4ND(
      (kernel): ModuleList(
        (0-1): 2 x SSMKernelDPLR()
      )
    )
  )
  (norms): ModuleList(
    (0): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
  )
  (dropouts): ModuleList(
    (0): Dropout(p=0.2, inplace=False)
  )
  (decoder): Linear(in_features=64, out_features=3, bias=True)
)
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
-----Hi------ torch.Size([16, 3, 128, 128])
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
torch.Size([16, 45, 128, 128]) torch.Size([16, 3, 128, 128]) torch.Size([16, 3, 128, 128])
----loss------, tensor(1.1439, device='cuda:0')
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
1: torch.Size([14, 45, 128, 128])
2: torch.Size([14, 128, 128, 47])
3: torch.Size([14, 128, 128, 64])
Test L2 Loss: 0.784029
average loss: 0.7840294738610586
1: torch.Size([16, 45, 128, 128])
2: torch.Size([16, 128, 128, 47])
3: torch.Size([16, 128, 128, 64])
Sample Output: torch.Size([16, 3, 128, 128])
Loss: tensor(1.8023, device='cuda:0')
Loading from file: /home/rvk/data/pdebench/ns_incom_inhom_2d_512-0.hdf5
Available keys: ['force', 'particles', 't', 'velocity']
Velocity data shape: (4, 1000, 512, 512, 2)
Particles data shape: (4, 1000, 512, 512, 1)
Time data shape: (4, 250)
Combined data shape: (4, 250, 512, 512, 3)
x shape: torch.Size([940, 45, 512, 512])
y shape: torch.Size([940, 3, 512, 512])
---------Using data normalizer---------------
Train dataset size: 752
Validation dataset size: 94
Test dataset size: 94
Original test data shape: x=torch.Size([94, 45, 512, 512]), y=torch.Size([94, 3, 512, 512])
Testing resolutions: [256, 512]

Evaluating at resolution: 256
Downsampled shapes: x=torch.Size([94, 45, 256, 256]), y=torch.Size([94, 3, 256, 256])
1: torch.Size([64, 45, 256, 256])
2: torch.Size([64, 256, 256, 47])
3: torch.Size([64, 256, 256, 64])
1: torch.Size([30, 45, 256, 256])
2: torch.Size([30, 256, 256, 47])
3: torch.Size([30, 256, 256, 64])
Resolution 256 - Relative L2 Loss: 1.144979

Evaluating at resolution: 512
Downsampled shapes: x=torch.Size([94, 45, 512, 512]), y=torch.Size([94, 3, 512, 512])
1: torch.Size([64, 45, 512, 512])
2: torch.Size([64, 512, 512, 47])
3: torch.Size([64, 512, 512, 64])
Error evaluating resolution 512: CUDA out of memory. Tried to allocate 16.00 GiB. GPU 0 has a total capacity of 44.42 GiB of which 2.44 GiB is free. Including non-PyTorch memory, this process has 41.98 GiB memory in use. Of the allocated memory 40.02 GiB is allocated by PyTorch, and 1.46 GiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Job completed at Mon May 12 13:31:59 EDT 2025
