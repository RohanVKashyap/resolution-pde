Job started on babel-8-9 at Mon Sep  8 10:38:41 EDT 2025
Job ID: 5442005
GPU information:
Mon Sep  8 10:38:41 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 575.51.03              Driver Version: 575.51.03      CUDA Version: 12.9     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA L40S                    On  |   00000000:D1:00.0 Off |                    0 |
| N/A   24C    P8             31W /  350W |       0MiB /  46068MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA L40S                    On  |   00000000:D2:00.0 Off |                    0 |
| N/A   24C    P8             31W /  350W |       0MiB /  46068MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
CUDA devices:
CUDA_VISIBLE_DEVICES: 0,1
Using device: cuda
Available GPUs: 2
[2025-09-08 10:38:47,522][root][INFO] - model:
  _target_: models.ffno.FFNO2D
  in_channels: 1
  out_channels: 1
  width: 64
  factor: 4
  n_modes: 64
  n_layers: 4
  dropout: 0.2
  mode: full
  ff_weight_norm: true
  n_ff_layers: 3
  layer_norm: true
  use_grid: true
dataset:
  dataset_params:
    _target_: dataloaders.ns_naive_true_multires.ns_true_multires_markov_dataset
    saved_folder: /data/user_data/rvk/ns_data/
    file_extension: .h5
    viscosity: 0.001
    reduced_batch: 1
    reduced_resolution_t: 1
    data_mres_size:
      512: 75
      256: 75
      128: 250
      64: 250
    add_res:
    - 32
    add_res_samples:
      32: 75
    downsample_from_res: 64
    data_normalizer: true
    normalization_type: simple
    num_samples_max: -1
    eval_dataset_target: dataloaders.ns_naive_markov.ns_markov_dataset
    eval_filename: ns_512_0.001.h5
    eval_saved_folder: /data/user_data/rvk/ns_data/
  resize_to_train: false
  evaluation_type: naive_downsample
  window_size: 15
  original_res: 512
  max_test_resolution: 512
  train_mres: true
  pde: ns
training:
  batch_size: 4
  epochs: 100
  learning_rate: 0.001
  use_normalizer: false
project_name: ${dataset.pde}_${hydra:runtime.choices.model}
checkpoint_dir: checkpoints

Project name: ns_ffno_2d/ffno_2d
Model name: models.ffno.FFNO2D
PDE Dataset: ns
This is True Multi-Resolution Training. Train Resolution is the highest data resolution in the multi-resolution data
---------------------
Creating true multi-resolution Navier-Stokes dataset from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution: {512: 75, 256: 75, 128: 250, 64: 250}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 75}
Will downsample from resolution: 64
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {512: 75, 256: 75, 128: 250, 64: 250}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 75}
Will downsample from resolution: 64
Loading resolution 512 from /data/user_data/rvk/ns_data/ns_512_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 512: (1000, 512, 512, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 512, 512, 1)
  After reduction: (1000, 32, 512, 512, 1)
  Split 'train' data shape: (800, 32, 512, 512, 1)
  Subsampled to 60 samples for train split
  Added 1800 sample pairs from resolution 512
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 32, 256, 256, 1)
  Split 'train' data shape: (800, 32, 256, 256, 1)
  Subsampled to 60 samples for train split
  Added 1800 sample pairs from resolution 256
Loading resolution 128 from /data/user_data/rvk/ns_data/ns_128_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 128: (1000, 128, 128, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 128, 128, 1)
  After reduction: (1000, 32, 128, 128, 1)
  Split 'train' data shape: (800, 32, 128, 128, 1)
  Subsampled to 200 samples for train split
  Added 6000 sample pairs from resolution 128
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 32, 64, 64, 1)
  Split 'train' data shape: (800, 32, 64, 64, 1)
  Subsampled to 200 samples for train split
  Added 6000 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Added 1800 downsampled samples at resolution 32
Total samples loaded: 17400
Resolution distribution:
  128_file: 6000 samples
  256_file: 1800 samples
  32_downsampled: 1800 samples
  512_file: 1800 samples
  64_file: 6000 samples
Sample x shapes: [(1, 512, 512), (1, 512, 512), (1, 512, 512)]
Sample y shapes: [(1, 512, 512), (1, 512, 512), (1, 512, 512)]
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {512: 75, 256: 75, 128: 250, 64: 250}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 75}
Will downsample from resolution: 64
Loading resolution 512 from /data/user_data/rvk/ns_data/ns_512_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 512: (1000, 512, 512, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 512, 512, 1)
  After reduction: (1000, 32, 512, 512, 1)
  Split 'val' data shape: (100, 32, 512, 512, 1)
  Subsampled to 7 samples for val split
  Added 210 sample pairs from resolution 512
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 32, 256, 256, 1)
  Split 'val' data shape: (100, 32, 256, 256, 1)
  Subsampled to 7 samples for val split
  Added 210 sample pairs from resolution 256
Loading resolution 128 from /data/user_data/rvk/ns_data/ns_128_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 128: (1000, 128, 128, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 128, 128, 1)
  After reduction: (1000, 32, 128, 128, 1)
  Split 'val' data shape: (100, 32, 128, 128, 1)
  Using all 100 samples for val split
  Added 3000 sample pairs from resolution 128
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 32, 64, 64, 1)
  Split 'val' data shape: (100, 32, 64, 64, 1)
  Using all 100 samples for val split
  Added 3000 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Added 210 downsampled samples at resolution 32
Total samples loaded: 6630
Resolution distribution:
  128_file: 3000 samples
  256_file: 210 samples
  32_downsampled: 210 samples
  512_file: 210 samples
  64_file: 3000 samples
Sample x shapes: [(1, 512, 512), (1, 512, 512), (1, 512, 512)]
Sample y shapes: [(1, 512, 512), (1, 512, 512), (1, 512, 512)]
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {512: 75, 256: 75, 128: 250, 64: 250}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 75}
Will downsample from resolution: 64
Loading resolution 512 from /data/user_data/rvk/ns_data/ns_512_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 512: (1000, 512, 512, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 512, 512, 1)
  After reduction: (1000, 32, 512, 512, 1)
  Split 'test' data shape: (100, 32, 512, 512, 1)
  Subsampled to 7 samples for test split
  Added 210 sample pairs from resolution 512
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 32, 256, 256, 1)
  Split 'test' data shape: (100, 32, 256, 256, 1)
  Subsampled to 7 samples for test split
  Added 210 sample pairs from resolution 256
Loading resolution 128 from /data/user_data/rvk/ns_data/ns_128_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 128: (1000, 128, 128, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 128, 128, 1)
  After reduction: (1000, 32, 128, 128, 1)
  Split 'test' data shape: (100, 32, 128, 128, 1)
  Using all 100 samples for test split
  Added 3000 sample pairs from resolution 128
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 32, 64, 64, 1)
  Split 'test' data shape: (100, 32, 64, 64, 1)
  Using all 100 samples for test split
  Added 3000 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Added 210 downsampled samples at resolution 32
Total samples loaded: 6630
Resolution distribution:
  128_file: 3000 samples
  256_file: 210 samples
  32_downsampled: 210 samples
  512_file: 210 samples
  64_file: 3000 samples
Sample x shapes: [(1, 512, 512), (1, 512, 512), (1, 512, 512)]
Sample y shapes: [(1, 512, 512), (1, 512, 512), (1, 512, 512)]
---------Using simple global normalization---------------
Global statistics: X(mean=-0.000000, std=0.621853), Y(mean=-0.000000, std=0.640677)

Final dataset sizes:
Train dataset size: 17400
Validation dataset size: 6630
Test dataset size: 6630
<dataloaders.ns_naive_true_multires.ns_true_multires_markov_dataset.<locals>.SimpleNormalizedDataset object at 0x1525f6ea0b90>
Detected 2 GPUs. Adjusting batch size from 4 to 8
Created resolution groups:
  Resolution 512: 1800 samples
  Resolution 256: 1800 samples
  Resolution 128: 6000 samples
  Resolution 64: 6000 samples
  Resolution 32: 1800 samples
Created resolution groups:
  Resolution 512: 210 samples
  Resolution 256: 210 samples
  Resolution 128: 3000 samples
  Resolution 64: 3000 samples
  Resolution 32: 210 samples
Created resolution groups:
  Resolution 512: 210 samples
  Resolution 256: 210 samples
  Resolution 128: 3000 samples
  Resolution 64: 3000 samples
  Resolution 32: 210 samples
<class 'torch.Tensor'> -6.315531209111214e-09 -8.352799341082573e-09 0.9787211418151855 0.976777970790863
FFNO2D(
  (in_proj): WNLinear(in_features=3, out_features=64, bias=True)
  (fourier_layers): ModuleList(
    (0-3): 4 x FSpectralConv2d(
      (fourier_weight): ParameterList(
          (0): Parameter containing: [torch.float32 of size 64x64x64x2 (cuda:0)]
          (1): Parameter containing: [torch.float32 of size 64x64x64x2 (cuda:0)]
      )
      (backcast_ff): FeedForward(
        (layers): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=64, out_features=256, bias=True)
            (1): Dropout(p=0.2, inplace=False)
            (2): GELU(approximate='none')
            (3): Identity()
          )
          (1): Sequential(
            (0): Linear(in_features=256, out_features=256, bias=True)
            (1): Dropout(p=0.2, inplace=False)
            (2): GELU(approximate='none')
            (3): Identity()
          )
          (2): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): Dropout(p=0.2, inplace=False)
            (2): Identity()
            (3): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
    )
  )
  (out_proj): WNLinear(in_features=64, out_features=1, bias=True)
)
Using DataParallel with 2 GPUs
Total Model Parameters: 4.59M
Trainable Parameters: 4.59M
