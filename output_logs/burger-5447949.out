Job started on shire-1-6 at Tue Sep  9 08:41:31 PM EDT 2025
Job ID: 5447949
GPU information:
Tue Sep  9 20:41:31 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 575.51.03              Driver Version: 575.51.03      CUDA Version: 12.9     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA GeForce GTX 1080 Ti     On  |   00000000:04:00.0 Off |                  N/A |
| 23%   31C    P8              8W /  250W |       3MiB /  11264MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
|   1  NVIDIA GeForce GTX 1080 Ti     On  |   00000000:05:00.0 Off |                  N/A |
| 23%   27C    P8              8W /  250W |       3MiB /  11264MiB |      0%      Default |
|                                         |                        |                  N/A |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI              PID   Type   Process name                        GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|  No running processes found                                                             |
+-----------------------------------------------------------------------------------------+
CUDA devices:
CUDA_VISIBLE_DEVICES: 0,1
Using device: cuda
Available GPUs: 2
[2025-09-09 20:41:35,992][root][INFO] - model:
  _target_: models.ffno.FFNO2D
  in_channels: 1
  out_channels: 1
  factor: 4
  n_modes: 64
  width: 64
  n_layers: 4
  dropout: 0.1
  mode: full
  ff_weight_norm: true
  n_ff_layers: 3
  layer_norm: true
  use_grid: true
dataset:
  dataset_params:
    _target_: dataloaders.ns_naive_true_multires.ns_true_multires_markov_dataset
    saved_folder: /data/user_data/rvk/ns_data/
    file_extension: .h5
    viscosity: '0.001'
    reduced_batch: 1
    reduced_resolution_t: 4
    data_mres_size:
      256: 100
      128: 400
      64: 400
    add_res:
    - 32
    add_res_samples:
      32: 100
    downsample_from_res: 64
    data_normalizer: true
    normalization_type: simple
    num_samples_max: -1
    eval_dataset_target: dataloaders.ns_naive_markov.ns_markov_dataset
    eval_filename: ns_256_0.001.h5
    eval_saved_folder: /data/user_data/rvk/ns_data/
  resize_to_train: false
  evaluation_type: naive_downsample
  window_size: 15
  original_res: 256
  max_test_resolution: 256
  train_mres: true
  pde: ns
training:
  batch_size: 32
  epochs: 35
  learning_rate: 0.001
  use_normalizer: false
project_name: ${dataset.pde}_${hydra:runtime.choices.model}
checkpoint_dir: checkpoints

Project name: ns_ffno_2d/ffno_2d
Model name: models.ffno.FFNO2D
PDE Dataset: ns
This is True Multi-Resolution Training. Train Resolution is the highest data resolution in the multi-resolution data
---------------------
Creating true multi-resolution Navier-Stokes dataset from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution: {256: 100, 128: 400, 64: 400}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 100}
Will downsample from resolution: 64
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {256: 100, 128: 400, 64: 400}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 100}
Will downsample from resolution: 64
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 8, 256, 256, 1)
  Split 'train' data shape: (800, 8, 256, 256, 1)
  Subsampled to 80 samples for train split
  Added 480 sample pairs from resolution 256
Loading resolution 128 from /data/user_data/rvk/ns_data/ns_128_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 128: (1000, 128, 128, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 128, 128, 1)
  After reduction: (1000, 8, 128, 128, 1)
  Split 'train' data shape: (800, 8, 128, 128, 1)
  Subsampled to 320 samples for train split
  Added 1920 sample pairs from resolution 128
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 8, 64, 64, 1)
  Split 'train' data shape: (800, 8, 64, 64, 1)
  Subsampled to 320 samples for train split
  Added 1920 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Added 480 downsampled samples at resolution 32
Total samples loaded: 4800
Resolution distribution:
  128_file: 1920 samples
  256_file: 480 samples
  32_downsampled: 480 samples
  64_file: 1920 samples
Sample x shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Sample y shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {256: 100, 128: 400, 64: 400}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 100}
Will downsample from resolution: 64
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 8, 256, 256, 1)
  Split 'val' data shape: (100, 8, 256, 256, 1)
  Using all 100 samples for val split
  Added 600 sample pairs from resolution 256
Loading resolution 128 from /data/user_data/rvk/ns_data/ns_128_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 128: (1000, 128, 128, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 128, 128, 1)
  After reduction: (1000, 8, 128, 128, 1)
  Split 'val' data shape: (100, 8, 128, 128, 1)
  Using all 100 samples for val split
  Added 600 sample pairs from resolution 128
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 8, 64, 64, 1)
  Split 'val' data shape: (100, 8, 64, 64, 1)
  Using all 100 samples for val split
  Added 600 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Added 60 downsampled samples at resolution 32
Total samples loaded: 1860
Resolution distribution:
  128_file: 600 samples
  256_file: 600 samples
  32_downsampled: 60 samples
  64_file: 600 samples
Sample x shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Sample y shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Loading Navier-Stokes multi-resolution data from /data/user_data/rvk/ns_data/
Viscosity: 0.001, File extension: .h5
Target samples per resolution (from files): {256: 100, 128: 400, 64: 400}
Additional downsampled resolutions: [32]
Target samples per downsampled resolution: {32: 100}
Will downsample from resolution: 64
Loading resolution 256 from /data/user_data/rvk/ns_data/ns_256_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 256: (1000, 256, 256, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 256, 256, 1)
  After reduction: (1000, 8, 256, 256, 1)
  Split 'test' data shape: (100, 8, 256, 256, 1)
  Using all 100 samples for test split
  Added 600 sample pairs from resolution 256
Loading resolution 128 from /data/user_data/rvk/ns_data/ns_128_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 128: (1000, 128, 128, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 128, 128, 1)
  After reduction: (1000, 8, 128, 128, 1)
  Split 'test' data shape: (100, 8, 128, 128, 1)
  Using all 100 samples for test split
  Added 600 sample pairs from resolution 128
Loading resolution 64 from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Raw data shape for 64: (1000, 64, 64, 32)
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Converted to shape: (1000, 32, 64, 64, 1)
  After reduction: (1000, 8, 64, 64, 1)
  Split 'test' data shape: (100, 8, 64, 64, 1)
  Using all 100 samples for test split
  Added 600 sample pairs from resolution 64
Adding downsampled resolutions: [32]
Adding downsampled data from /data/user_data/rvk/ns_data/ns_64_0.001.h5
  Loading .h5 file...
  Available keys: ['a', 't', 'u']
  Detected (batch, height, width, time) format, transposing to (batch, time, height, width)
  Added 60 downsampled samples at resolution 32
Total samples loaded: 1860
Resolution distribution:
  128_file: 600 samples
  256_file: 600 samples
  32_downsampled: 60 samples
  64_file: 600 samples
Sample x shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
Sample y shapes: [(1, 256, 256), (1, 256, 256), (1, 256, 256)]
---------Using simple global normalization---------------
Global statistics: X(mean=-0.000000, std=0.586162), Y(mean=-0.000000, std=0.668007)

Final dataset sizes:
Train dataset size: 4800
Validation dataset size: 1860
Test dataset size: 1860
<dataloaders.ns_naive_true_multires.ns_true_multires_markov_dataset.<locals>.SimpleNormalizedDataset object at 0x152a1ad54cd0>
Detected 2 GPUs. Adjusting batch size from 32 to 64
Created resolution groups:
  Resolution 256: 480 samples
  Resolution 128: 1920 samples
  Resolution 64: 1920 samples
  Resolution 32: 480 samples
Created resolution groups:
  Resolution 256: 600 samples
  Resolution 128: 600 samples
  Resolution 64: 600 samples
  Resolution 32: 60 samples
Created resolution groups:
  Resolution 256: 600 samples
  Resolution 128: 600 samples
  Resolution 64: 600 samples
  Resolution 32: 60 samples
<class 'torch.Tensor'> 2.1364030544646084e-09 1.7425918485969305e-09 1.097339153289795 1.0773684978485107
FFNO2D(
  (in_proj): WNLinear(in_features=3, out_features=64, bias=True)
  (fourier_layers): ModuleList(
    (0-3): 4 x FSpectralConv2d(
      (fourier_weight): ParameterList(
          (0): Parameter containing: [torch.float32 of size 64x64x64x2 (cuda:0)]
          (1): Parameter containing: [torch.float32 of size 64x64x64x2 (cuda:0)]
      )
      (backcast_ff): FeedForward(
        (layers): ModuleList(
          (0): Sequential(
            (0): Linear(in_features=64, out_features=256, bias=True)
            (1): Dropout(p=0.1, inplace=False)
            (2): GELU(approximate='none')
            (3): Identity()
          )
          (1): Sequential(
            (0): Linear(in_features=256, out_features=256, bias=True)
            (1): Dropout(p=0.1, inplace=False)
            (2): GELU(approximate='none')
            (3): Identity()
          )
          (2): Sequential(
            (0): Linear(in_features=256, out_features=64, bias=True)
            (1): Dropout(p=0.1, inplace=False)
            (2): Identity()
            (3): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
    )
  )
  (out_proj): WNLinear(in_features=64, out_features=1, bias=True)
)
Using DataParallel with 2 GPUs
Total Model Parameters: 4.59M
Trainable Parameters: 4.59M
[1;34mwandb[0m: 
[1;34mwandb[0m: 🚀 View run [33mtwilight-cherry-149[0m at: [34mhttps://wandb.ai/rohanvk-carnegie-mellon-university/ffno2d/runs/d6gyq3pp[0m
[1;34mwandb[0m: Find logs at: [1;35mwandb/run-20250909_204513-d6gyq3pp/logs[0m
Job completed at Tue Sep  9 08:45:18 PM EDT 2025
